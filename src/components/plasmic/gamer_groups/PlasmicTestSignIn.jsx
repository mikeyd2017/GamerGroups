// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: v2ovbRJGsEFmRX1j8f3Jsa
// Component: 517g80Br5b
import * as React from "react";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "../blank_project/plasmic_blank_project.module.css"; // plasmic-import: v2ovbRJGsEFmRX1j8f3Jsa/projectcss
import * as sty from "./PlasmicTestSignIn.module.css"; // plasmic-import: 517g80Br5b/css

export const PlasmicTestSignIn__VariantProps = new Array();

export const PlasmicTestSignIn__ArgProps = new Array();

function PlasmicTestSignIn__RenderFunc(props) {
  const { variants, args, overrides, forNode, dataFetches } = props;
  return (
    <React.Fragment>
      <div className={defaultcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            defaultcss.all,
            projectcss.root_reset,
            sty.root
          )}
        />
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: ["root"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicTestSignIn__ArgProps,
      internalVariantPropNames: PlasmicTestSignIn__VariantProps
    });

    const { dataFetches } = props;
    return PlasmicTestSignIn__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicTestSignIn";
  } else {
    func.displayName = `PlasmicTestSignIn.${nodeName}`;
  }
  return func;
}

export const PlasmicTestSignIn = Object.assign(
  // Top-level PlasmicTestSignIn renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    // Metadata about props expected for PlasmicTestSignIn
    internalVariantProps: PlasmicTestSignIn__VariantProps,
    internalArgProps: PlasmicTestSignIn__ArgProps
  }
);

export default PlasmicTestSignIn;
/* prettier-ignore-end */
